---
name: Build Latest

on:
  workflow_dispatch:
  schedule:
    - cron: 0 8 1 * *
  push:
    branches:
      - master
    paths:
      - .github/workflows/build-latest.yml
      - Dockerfile

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true
permissions: write-all

jobs:
  build-latest-simplified-suffix:
    strategy:
      fail-fast: false
      matrix:
        year: [2023]
        base_os: [trixie]  # use trixie as default base image
    name: Build ${{ matrix.year }} on ${{ matrix.base_os }}
    runs-on: ubuntu-latest
    steps:
      - name: Maximize build space
        run: |
          # Remove .Net
          sudo rm -rf /usr/share/dotnet
          # Remove Android
          sudo rm -rf /usr/local/lib/android
          # Remove Haskell
          sudo rm -rf /opt/ghc
          # Remove CodeQL
          sudo rm -rf /opt/hostedtoolcache/CodeQL
          # Remove docker images
          sudo docker image prune --all --force
      - name: Set up Git repository
        uses: actions/checkout@main
      - name: Set up QEMU
        uses: docker/setup-qemu-action@master
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@master
      - name: Login to DockerHub
        uses: docker/login-action@master
        with:
          username: zydou
          password: ${{ secrets.DOCKER_PASSWD }}
      - name: Login to GHCR
        uses: docker/login-action@master
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Build and push
        uses: docker/build-push-action@master
        with:
          context: .
          file: Dockerfile
          platforms: linux/amd64,linux/arm64
          push: true
          build-args: |
            YEAR=${{matrix.year}}
            BASE_OS=${{matrix.base_os}}
          cache-from: |
            type=registry,ref=ghcr.io/${{github.repository}}:${{matrix.year}}-${{matrix.base_os}}
          target: normal
          tags: |
            ${{github.repository}}:latest
            ${{github.repository}}:latest-${{matrix.base_os}}
            ${{github.repository}}:${{matrix.year}}
            ${{github.repository}}:${{matrix.year}}-${{matrix.base_os}}
            ${{github.repository}}:${{matrix.base_os}}
      - name: Test
        run: |
          docker run --rm ${{github.repository}}:${{ matrix.year }}-${{matrix.base_os}} pdflatex --version
          cat <<EOF >test.tex
          \documentclass{article}
          \usepackage{amsfonts}
          \begin{document}
          test
          \end{document}
          EOF
          docker run --rm -v "$(pwd)":/data -w /data ${{github.repository}}:${{ matrix.year }}-${{matrix.base_os}} pdflatex test.tex
          file test.pdf | grep -q ' PDF '

  build-latest-full-suffix:
    strategy:
      fail-fast: false
      matrix:
        year: [2023]
        base_os: [buster, bullseye, bookworm, xenial, bionic, focal, jammy]
    name: Build ${{ matrix.year }} on ${{ matrix.base_os }}
    runs-on: ubuntu-latest
    steps:
      - name: Maximize build space
        run: |
          # Remove .Net
          sudo rm -rf /usr/share/dotnet
          # Remove Android
          sudo rm -rf /usr/local/lib/android
          # Remove Haskell
          sudo rm -rf /opt/ghc
          # Remove CodeQL
          sudo rm -rf /opt/hostedtoolcache/CodeQL
          # Remove docker images
          sudo docker image prune --all --force
      - name: Set up Git repository
        uses: actions/checkout@main
      - name: Set up QEMU
        uses: docker/setup-qemu-action@master
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@master
      - name: Login to DockerHub
        uses: docker/login-action@master
        with:
          username: zydou
          password: ${{ secrets.DOCKER_PASSWD }}
      - name: Login to GHCR
        uses: docker/login-action@master
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push
        if: matrix.base_os != 'xenial' && matrix.base_os != 'bionic'
        uses: docker/build-push-action@master
        with:
          context: .
          file: Dockerfile
          platforms: linux/amd64,linux/arm64
          push: true
          build-args: |
            YEAR=${{matrix.year}}
            BASE_OS=${{matrix.base_os}}
          cache-from: |
            type=registry,ref=ghcr.io/${{github.repository}}:${{matrix.year}}-${{matrix.base_os}}
          target: normal
          tags: |
            ${{github.repository}}:latest-${{matrix.base_os}}
            ${{github.repository}}:${{matrix.base_os}}
            ${{github.repository}}:${{matrix.year}}-${{matrix.base_os}}
      - name: Build and push (Old GLIBC)
        if: matrix.base_os == 'xenial' || matrix.base_os == 'bionic'
        uses: docker/build-push-action@master
        with:
          context: .
          file: Dockerfile
          platforms: linux/amd64,linux/arm64
          push: true
          build-args: |
            YEAR=${{matrix.year}}
            BASE_OS=${{matrix.base_os}}
          cache-from: |
            type=registry,ref=ghcr.io/${{github.repository}}:${{matrix.base_os}}-baseimg
          target: old-glibc
          tags: |
            ${{github.repository}}:latest-${{matrix.base_os}}
            ${{github.repository}}:${{matrix.base_os}}
            ${{github.repository}}:${{matrix.year}}-${{matrix.base_os}}
      - name: Test
        run: |
          docker run --rm ${{github.repository}}:${{ matrix.year }}-${{matrix.base_os}} pdflatex --version
          cat <<EOF >test.tex
          \documentclass{article}
          \usepackage{amsfonts}
          \begin{document}
          test
          \end{document}
          EOF
          docker run --rm -v "$(pwd)":/data -w /data ${{github.repository}}:${{ matrix.year }}-${{matrix.base_os}} pdflatex test.tex
          file test.pdf | grep -q ' PDF '
