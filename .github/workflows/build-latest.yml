---
name: Build Latest

on:
  workflow_dispatch:
  schedule:
    - cron: 0 8 1 * *
  push:
    branches:
      - master
    paths:
      - .github/workflows/build-latest.yml
      - Dockerfile
      - texlive.profile

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build-latest-simplified-suffix:
    strategy:
      fail-fast: false
      matrix:
        year: [2023]
        base_os: [trixie]  # use trixie as default base image
    name: Build ${{ matrix.year }} on ${{ matrix.base_os }}
    runs-on: ubuntu-latest
    steps:
      - name: Set up Git repository
        uses: actions/checkout@main
      - name: Delete built-in docker images to get more disk space
        run: docker system prune --all --volumes --force
      - name: Set up QEMU
        uses: docker/setup-qemu-action@master
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@master
      - name: Login to DockerHub
        uses: docker/login-action@master
        with:
          username: zydou
          password: ${{ secrets.DOCKER_PASSWD }}
      - name: set BASE_IMG and OS_VARIANT ENV
        run: |
          if [[ "${{matrix.base_os}}" = "buster" || ${{matrix.base_os}} = "bullseye" || ${{matrix.base_os}} = "bookworm" || ${{matrix.base_os}} = "trixie" ]]; then
          echo "BASE_IMG=debian" >> "${GITHUB_ENV}"
          echo "OS_VARIANT=${{matrix.base_os}}-slim" >> "${GITHUB_ENV}"
          echo "using base image: debian:${{matrix.base_os}}-slim"
          else
          echo "BASE_IMG=ubuntu" >> "${GITHUB_ENV}"
          echo "OS_VARIANT=${{matrix.base_os}}" >> "${GITHUB_ENV}"
          echo "using base image: ubuntu:${{matrix.base_os}}"
          fi
      - name: Build and push
        uses: docker/build-push-action@master
        with:
          context: .
          file: Dockerfile
          platforms: linux/amd64,linux/arm64
          push: true
          build-args: |
            MIRROR_URL=https://mirrors.tuna.tsinghua.edu.cn/CTAN/systems/texlive/tlnet/
            YEAR=${{matrix.year}}
            BASE_IMG=${{env.BASE_IMG}}
            OS_VARIANT=${{env.OS_VARIANT}}
          tags: |
            zydou/texlive:latest
            zydou/texlive:latest-${{matrix.base_os}}
            zydou/texlive:${{matrix.year}}
            zydou/texlive:${{matrix.year}}-${{matrix.base_os}}
            zydou/texlive:${{matrix.base_os}}
      - name: Test
        run: |
          docker run --rm zydou/texlive:${{ matrix.year }}-${{matrix.base_os}} pdflatex --version
          cat <<EOF >test.tex
          \documentclass{article}
          \usepackage{amsfonts}
          \begin{document}
          test
          \end{document}
          EOF
          docker run --rm -v "$(pwd)":/data -w /data zydou/texlive:${{ matrix.year }}-${{matrix.base_os}} pdflatex test.tex
          file test.pdf | grep -q ' PDF '

  build-latest-full-suffix:
    strategy:
      fail-fast: false
      matrix:
        year: [2023]
        base_os: [buster, bullseye, bookworm, xenial, bionic, focal, jammy]
    name: Build ${{ matrix.year }} on ${{ matrix.base_os }}
    runs-on: ubuntu-latest
    steps:
      - name: Set up Git repository
        uses: actions/checkout@main
      - name: Delete built-in docker images to get more disk space
        run: docker system prune --all --volumes --force
      - name: Set up QEMU
        uses: docker/setup-qemu-action@master
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@master
      - name: Login to DockerHub
        uses: docker/login-action@master
        with:
          username: zydou
          password: ${{ secrets.DOCKER_PASSWD }}
      - name: set BASE_IMG and OS_VARIANT ENV
        run: |
          if [[ "${{matrix.base_os}}" = "buster" || ${{matrix.base_os}} = "bullseye" || ${{matrix.base_os}} = "bookworm" || ${{matrix.base_os}} = "trixie" ]]; then
          echo "BASE_IMG=debian" >> "${GITHUB_ENV}"
          echo "OS_VARIANT=${{matrix.base_os}}-slim" >> "${GITHUB_ENV}"
          echo "using base image: debian:${{matrix.base_os}}-slim"
          else
          echo "BASE_IMG=ubuntu" >> "${GITHUB_ENV}"
          echo "OS_VARIANT=${{matrix.base_os}}" >> "${GITHUB_ENV}"
          echo "using base image: ubuntu:${{matrix.base_os}}"
          fi
      - name: Build and push
        uses: docker/build-push-action@master
        with:
          context: .
          file: Dockerfile
          platforms: linux/amd64,linux/arm64
          push: true
          build-args: |
            MIRROR_URL=https://mirrors.tuna.tsinghua.edu.cn/CTAN/systems/texlive/tlnet/
            YEAR=${{matrix.year}}
            BASE_IMG=${{env.BASE_IMG}}
            OS_VARIANT=${{env.OS_VARIANT}}
          tags: |
            zydou/texlive:latest-${{matrix.base_os}}
            zydou/texlive:${{matrix.base_os}}
            zydou/texlive:${{matrix.year}}-${{matrix.base_os}}
      - name: Test
        run: |
          docker run --rm zydou/texlive:${{ matrix.year }}-${{matrix.base_os}} pdflatex --version
          cat <<EOF >test.tex
          \documentclass{article}
          \usepackage{amsfonts}
          \begin{document}
          test
          \end{document}
          EOF
          docker run --rm -v "$(pwd)":/data -w /data zydou/texlive:${{ matrix.year }}-${{matrix.base_os}} pdflatex test.tex
          file test.pdf | grep -q ' PDF '

  dockerhub:
    name: Docker Hub Description
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@main
      - name: Docker Hub Description
        uses: peter-evans/dockerhub-description@main
        with:
          username: zydou
          password: ${{ secrets.DOCKER_PASSWD }}
          repository: zydou/texlive
          short-description: texlive docker images
          readme-filepath: README.md
