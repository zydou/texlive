---
name: Get packages version

on:
  workflow_dispatch:
  workflow_run:
    workflows: [Build Latest]
    types:
      - completed
  push:
    branches:
      - master
    paths:
      - .github/workflows/generate-pkg-version.yml

permissions: write-all
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  generate:
    strategy:
      fail-fast: true
      matrix:
        texlive: [2018, 2019, 2020, 2021, 2022, 2023]
        debian: [buster, bullseye, bookworm, trixie]
        arch: [amd64, arm64]
    name: ${{matrix.texlive}}-${{matrix.debian}} (${{matrix.arch}})
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@main
      - name: Set up QEMU
        uses: docker/setup-qemu-action@master
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@master
      - name: ${{matrix.texlive}}-${{matrix.debian}} (${{matrix.arch}})
        run: |
          docker pull --platform linux/${{matrix.arch}} zydou/devcontainer-latex:${{matrix.texlive}}-${{matrix.debian}}
          echo "Package,Version" > texlive-packages.csv
          docker run --rm --platform linux/${{matrix.arch}} zydou/devcontainer-latex:${{matrix.texlive}}-${{matrix.debian}} tlmgr info --only-installed --data "name,cat-version" >> texlive-packages.csv
          echo "Package,Version" > system-packages.csv
          docker run --rm --platform linux/${{matrix.arch}} zydou/devcontainer-latex:${{matrix.texlive}}-${{matrix.debian}} dpkg-query -W -f='${Package},${Version}\n' >> system-packages.csv
          docker rmi zydou/devcontainer-latex:${{matrix.texlive}}-${{matrix.debian}}
      - name: Upload artifacts
        uses: actions/upload-artifact@main
        with:
          name: texlive-${{matrix.texlive}}-${{matrix.debian}}-${{matrix.arch}}
          path: |
            ./*.csv
  push:
    needs: generate
    name: push pkg info
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@main
      - name: Download artifacts
        uses: actions/download-artifact@v3
        with:
          path: artifacts
      - name: Push artifacts to Github
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_branch: pkg-info
          publish_dir: ./artifacts
          force_orphan: true
          enable_jekyll: true
          full_commit_message: ${{ github.event.head_commit.message }}
