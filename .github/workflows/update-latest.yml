name: Update Latest

on:
  workflow_dispatch:
  push:
    branches:
      - master
    paths:
      - .github/workflows/update-latest.yml
      - update.Dockerfile
  schedule:
    - cron: "0 18 * * *"
permissions: write-all

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        scheme: [basic, small, medium, full]
    name: Update latest-${{ matrix.scheme }}
    runs-on: ubuntu-latest
    steps:
      - name: Set up Git repository
        uses: actions/checkout@main
      - name: Set date
        id: date
        run: echo "date=$(date +'%Y-%m-%d')" >> $GITHUB_ENV
      - name: Set up QEMU
        uses: docker/setup-qemu-action@master
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@master
      - name: Login to GitHub Container Registry
        uses: docker/login-action@master
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Login to DockerHub
        uses: docker/login-action@master
        with:
          username: ${{ github.repository_owner }}
          password: ${{ secrets.DOCKER_PASSWD }}
      - name: Build and push
        uses: docker/build-push-action@master
        if: ${{ matrix.scheme != 'full' }}
        with:
          context: .
          file: update.Dockerfile
          platforms: linux/amd64
          push: true
          build-args: TAG=latest-${{ matrix.scheme }}
          tags: |
            ghcr.io/${{ github.repository_owner }}/texlive:latest-${{ matrix.scheme }}
            ghcr.io/${{ github.repository_owner }}/texlive:2022-${{ matrix.scheme }}
            ${{ github.repository_owner }}/texlive:latest-${{ matrix.scheme }}
            ${{ github.repository_owner }}/texlive:2022-${{ matrix.scheme }}
            ghcr.io/${{ github.repository_owner }}/texlive:latest-${{ matrix.scheme }}-nightly-${{ env.date }}
            ghcr.io/${{ github.repository_owner }}/texlive:2022-${{ matrix.scheme }}-nightly-${{ env.date }}
            ${{ github.repository_owner }}/texlive:latest-${{ matrix.scheme }}-nightly-${{ env.date }}
            ${{ github.repository_owner }}/texlive:2022-${{ matrix.scheme }}-nightly-${{ env.date }}
      - name: Tag year only for scheme-full
        uses: docker/build-push-action@master
        if: ${{ matrix.scheme == 'full' }}
        with:
          context: .
          file: update.Dockerfile
          platforms: linux/amd64
          push: true
          build-args: TAG=latest-${{ matrix.scheme }}
          tags: |
            ghcr.io/${{ github.repository_owner }}/texlive:latest-${{ matrix.scheme }}
            ghcr.io/${{ github.repository_owner }}/texlive:2022-${{ matrix.scheme }}
            ghcr.io/${{ github.repository_owner }}/texlive:latest
            ghcr.io/${{ github.repository_owner }}/texlive:2022
            ${{ github.repository_owner }}/texlive:latest-${{ matrix.scheme }}
            ${{ github.repository_owner }}/texlive:2022-${{ matrix.scheme }}
            ${{ github.repository_owner }}/texlive:latest
            ${{ github.repository_owner }}/texlive:2022
            ghcr.io/${{ github.repository_owner }}/texlive:latest-${{ matrix.scheme }}-nightly-${{ env.date }}
            ghcr.io/${{ github.repository_owner }}/texlive:2022-${{ matrix.scheme }}-nightly-${{ env.date }}
            ghcr.io/${{ github.repository_owner }}/texlive:latest-nightly-${{ env.date }}
            ghcr.io/${{ github.repository_owner }}/texlive:2022-nightly-${{ env.date }}
            ${{ github.repository_owner }}/texlive:latest-${{ matrix.scheme }}-nightly-${{ env.date }}
            ${{ github.repository_owner }}/texlive:2022-${{ matrix.scheme }}-nightly-${{ env.date }}
            ${{ github.repository_owner }}/texlive:latest-nightly-${{ env.date }}
            ${{ github.repository_owner }}/texlive:2022-nightly-${{ env.date }}
      - name: Test
        run: |
          docker run --rm ghcr.io/${{ github.repository_owner }}/texlive:latest-${{ matrix.scheme }} pdflatex --version
          cat <<EOF >test.tex
          \documentclass{article}
          \usepackage{amsfonts}
          \begin{document}
          test
          \end{document}
          EOF
          docker run --rm -v $(pwd):/data -w /data ghcr.io/${{ github.repository_owner }}/texlive:latest-${{ matrix.scheme }} pdflatex test.tex
          file test.pdf | grep -q ' PDF '
  build-with-doc:
    strategy:
      matrix:
        scheme: [basic, small, medium, full]
    name: Build latest-${{ matrix.scheme }}-doc
    runs-on: ubuntu-latest
    steps:
      - name: Set up Git repository
        uses: actions/checkout@main
      - name: Set date
        id: date
        run: echo "::set-output name=date::$(date +'%Y-%m-%d')"
      - name: Set up QEMU
        uses: docker/setup-qemu-action@master
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@master
      - name: Login to GitHub Container Registry
        uses: docker/login-action@master
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Login to DockerHub
        uses: docker/login-action@master
        with:
          username: ${{ github.repository_owner }}
          password: ${{ secrets.DOCKER_PASSWD }}
      - name: Build and push
        uses: docker/build-push-action@master
        if: ${{ matrix.scheme != 'full' }}
        with:
          context: .
          file: update.Dockerfile
          platforms: linux/amd64
          push: true
          build-args: TAG=latest-${{ matrix.scheme }}-doc
          tags: |
            ghcr.io/${{ github.repository_owner }}/texlive:latest-${{ matrix.scheme }}-doc
            ghcr.io/${{ github.repository_owner }}/texlive:2022-${{ matrix.scheme }}-doc
            ${{ github.repository_owner }}/texlive:latest-${{ matrix.scheme }}-doc
            ${{ github.repository_owner }}/texlive:2022-${{ matrix.scheme }}-doc
            ghcr.io/${{ github.repository_owner }}/texlive:latest-${{ matrix.scheme }}-doc-nightly-${{ env.date }}
            ghcr.io/${{ github.repository_owner }}/texlive:2022-${{ matrix.scheme }}-doc-nightly-${{ env.date }}
            ${{ github.repository_owner }}/texlive:latest-${{ matrix.scheme }}-doc-nightly-${{ env.date }}
            ${{ github.repository_owner }}/texlive:2022-${{ matrix.scheme }}-doc-nightly-${{ env.date }}
      - name: Tag year only for scheme-full
        uses: docker/build-push-action@master
        if: ${{ matrix.scheme == 'full' }}
        with:
          context: .
          file: update.Dockerfile
          platforms: linux/amd64
          push: true
          build-args: TAG=latest-${{ matrix.scheme }}-doc
          tags: |
            ghcr.io/${{ github.repository_owner }}/texlive:latest-${{ matrix.scheme }}-doc
            ghcr.io/${{ github.repository_owner }}/texlive:2022-${{ matrix.scheme }}-doc
            ghcr.io/${{ github.repository_owner }}/texlive:latest-doc
            ghcr.io/${{ github.repository_owner }}/texlive:2022-doc
            ${{ github.repository_owner }}/texlive:latest-${{ matrix.scheme }}-doc
            ${{ github.repository_owner }}/texlive:2022-${{ matrix.scheme }}-doc
            ${{ github.repository_owner }}/texlive:latest-doc
            ${{ github.repository_owner }}/texlive:2022-doc
            ghcr.io/${{ github.repository_owner }}/texlive:latest-${{ matrix.scheme }}-doc-nightly-${{ env.date }}
            ghcr.io/${{ github.repository_owner }}/texlive:2022-${{ matrix.scheme }}-doc-nightly-${{ env.date }}
            ghcr.io/${{ github.repository_owner }}/texlive:latest-doc-nightly-${{ env.date }}
            ghcr.io/${{ github.repository_owner }}/texlive:2022-doc-nightly-${{ env.date }}
            ${{ github.repository_owner }}/texlive:latest-${{ matrix.scheme }}-doc-nightly-${{ env.date }}
            ${{ github.repository_owner }}/texlive:2022-${{ matrix.scheme }}-doc-nightly-${{ env.date }}
            ${{ github.repository_owner }}/texlive:latest-doc-nightly-${{ env.date }}
            ${{ github.repository_owner }}/texlive:2022-doc-nightly-${{ env.date }}
      - name: Test
        run: |
          docker run --rm ghcr.io/${{ github.repository_owner }}/texlive:latest-${{ matrix.scheme }}-doc pdflatex --version
          cat <<EOF >test.tex
          \documentclass{article}
          \usepackage{amsfonts}
          \begin{document}
          test
          \end{document}
          EOF
          docker run --rm -v $(pwd):/data -w /data ghcr.io/${{ github.repository_owner }}/texlive:latest-${{ matrix.scheme }}-doc pdflatex test.tex
          file test.pdf | grep -q ' PDF '
  final:
    name: Clean-up and add README
    if: ${{ always() }}
    needs: [build, build-with-doc]
    runs-on: ubuntu-latest
    steps:
      - name: Set up Git repository
        uses: actions/checkout@main
      - name: Docker Hub Description
        uses: peter-evans/dockerhub-description@main
        with:
          username: ${{ github.repository_owner }}
          password: ${{ secrets.DOCKER_PASSWD }}
          repository: ${{ github.repository_owner }}/texlive
          short-description: "Dockerized texlive with various schemes"
          readme-filepath: README.md